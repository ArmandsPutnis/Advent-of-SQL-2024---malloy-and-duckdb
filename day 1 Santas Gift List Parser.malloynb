>>>markdown
https://adventofsql.com/challenges/1
>>>sql
--- connection: duckdb
 CREATE OR REPLACE TABLE children_sample (
      child_id INT PRIMARY KEY,
      name VARCHAR(100),
      age INT
  );
  CREATE OR REPLACE TABLE wish_lists_sample (
      list_id INT PRIMARY KEY,
      child_id INT,
      wishes JSON,
      submitted_date DATE
  );
  CREATE OR REPLACE TABLE toy_catalogue_sample (
      toy_id INT PRIMARY KEY,
      toy_name VARCHAR(100),
      category VARCHAR(50),
      difficulty_to_make INT
  );

INSERT INTO children_sample VALUES
  (1, 'Tommy', 8),
  (2, 'Sally', 7),
  (3, 'Bobby', 9);

  INSERT INTO wish_lists_sample VALUES
  (1, 1, '{"first_choice": "bike", "second_choice": "blocks", "colors": ["red", "blue"]}', '2024-11-01'),
  (2, 2, '{"first_choice": "doll", "second_choice": "books", "colors": ["pink", "purple"]}', '2024-11-02'),
  (3, 3, '{"first_choice": "blocks", "second_choice": "bike", "colors": ["green"]}', '2024-11-03');

  INSERT INTO toy_catalogue_sample VALUES
  (1, 'bike', 'outdoor', 3),
  (2, 'blocks', 'educational', 1),
  (3, 'doll', 'indoor', 2),
  (4, 'books', 'educational', 1);
>>>malloy

source: children is duckdb.table('main.children_sample') extend {
    measure:
      count_children is count(child_id)
      avg_children_age is avg(age)
    primary_key: child_id
}
>>>malloy
source: toy_catalogue is duckdb.table('toy_catalogue_sample') extend {
    measure:
      total_toys_in_workshop is count(toy_id)
    dimension:
      gift_complexity is
        pick 'Simple Gift' when difficulty_to_make= 1
        pick 'Modarate Gift' when difficulty_to_make = 2
        else 'Complex Gift'
      workshop_assignment is
        pick 'Outside Workshop' when category = 'outdoor'
        pick 'Learning Workshop' when category = 'educational'
        else 'General Workshop'



  primary_key: toy_id
}
>>>malloy
source: wish_lists is duckdb.sql("""
    SELECT list_id,
      child_id,
      wishes,
      submitted_date,
      REPLACE(wishes ->> '$.first_choice', '"', '') AS primary_wish,

      REPLACE(wishes ->> '$.second_choice', '"', '') AS backup_wish,
      REPLACE(wishes ->> '$.colors[0]', '"', '') AS favorite_color,
      JSON_ARRAY_LENGTH(wishes -> '$.colors') AS color_count
    FROM 'wish_lists_sample'


 """) extend {
  join_one: children with child_id
  join_one: toy_catalogue on toy_catalogue.toy_name = primary_wish

 }
>>>malloy
/// Answer to the question withe the _sampe data
run: wish_lists -> {
   group_by: children.child_id, children.name
      primary_wish
      backup_wish
      favorite_color
      color_count
      toy_catalogue.gift_complexity
      toy_catalogue.workshop_assignment
    }