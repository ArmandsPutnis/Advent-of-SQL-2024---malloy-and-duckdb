>>>markdown
https://adventofsql.com/challenges/1

![alt text](image.png)
>>>malloy
>>>malloy
source: children is duckdb.table('../Advent of SQL 2024 - malloy and duckdb/data/day1/children_202501071203.csv') extend {
    measure:
      count_children is count(child_id)
      avg_children_age is avg(age)
    primary_key: child_id
}
>>>malloy
source: toy_catalogue is duckdb.table('../Advent of SQL 2024 - malloy and duckdb/data/day1//toy_catalogue_202501071203.csv') extend {
    measure:
      total_toys_in_workshop is count(toy_id)
    dimension:
      gift_complexity is
        pick 'Simple Gift' when difficulty_to_make= 1
        pick 'Modarate Gift' when difficulty_to_make = 2
        else 'Complex Gift'
      workshop_assignment is
        pick 'Outside Workshop' when category = 'outdoor'
        pick 'Learning Workshop' when category = 'educational'
        else 'General Workshop'



  primary_key: toy_id
}
>>>malloy
source: wish_lists is duckdb.sql("""
    SELECT list_id,
      child_id,
      wishes,
      submitted_date,
      REPLACE(wishes ->> '$.first_choice', '"', '') AS primary_wish,

      REPLACE(wishes ->> '$.second_choice', '"', '') AS backup_wish,
      REPLACE(wishes ->> '$.colors[0]', '"', '') AS favorite_color,
      JSON_ARRAY_LENGTH(wishes -> '$.colors') AS color_count
    FROM '../Advent of SQL 2024 - malloy and duckdb/data/day1/wish_lists_202501071203.csv'


 """) extend {
  join_one: children with child_id
  join_one: toy_catalogue on toy_catalogue.toy_name = primary_wish

 }
>>>malloy
source: answer is wish_lists extend {
    view: solution is {
      group_by: children.child_id, children.name
      primary_wish
      backup_wish
      favorite_color
      color_count
      toy_catalogue.gift_complexity
      toy_catalogue.workshop_assignment
    }

}